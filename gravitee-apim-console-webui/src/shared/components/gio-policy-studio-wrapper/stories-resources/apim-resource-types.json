{
  "data": [
    {
      "id": "cache",
      "name": "Cache",
      "description": "Cache resource",
      "version": "1.2.0",
      "schema": {
        "type": "object",
        "id": "urn:jsonschema:io:gravitee:resource:cache:configuration:CacheResourceConfiguration",
        "properties": {
          "name": {
            "title": "Cache name",
            "description": "The name of the cache.",
            "type": "string",
            "default": "my-cache"
          },
          "timeToIdleSeconds": {
            "title": "Time to idle (in seconds)",
            "type": "integer",
            "description": "The maximum number of seconds an element can exist in the cache without being accessed. The element expires at this limit and will no longer be returned from the cache. The default value is 0, which means no timeToIdle (TTI) eviction takes place (infinite lifetime).",
            "default": 0,
            "minimum": 0
          },
          "timeToLiveSeconds": {
            "title": "Time to live (in seconds)",
            "type": "integer",
            "description": "The maximum number of seconds an element can exist in the cache regardless of use. The element expires at this limit and will no longer be returned from the cache. The default value is 0, which means no timeToLive (TTL) eviction takes place (infinite lifetime).",
            "default": 0,
            "minimum": 0
          },
          "maxEntriesLocalHeap": {
            "title": "Max entries on heap",
            "description": "The maximum objects to be held in local heap memory (0 = no limit).",
            "type": "integer",
            "default": 1000,
            "minimum": 0
          }
        },
        "required": ["name", "timeToIdleSeconds", "timeToLiveSeconds", "maxEntriesLocalHeap"]
      }
    },
    {
      "id": "oauth2-am-resource",
      "name": "Gravitee.io AM AS",
      "description": "Gravitee.io AM Authorization Server resource",
      "version": "1.10.0",
      "schema": {
        "type": "object",
        "id": "urn:jsonschema:io:gravitee:resource:oauth2:am:configuration:OAuth2ResourceConfiguration",
        "properties": {
          "serverURL": {
            "title": "Server URL",
            "description": "The URL of the Access Management server.",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "description": "The version of the Access Management server.",
            "type": "string",
            "default": "V1_X",
            "enum": ["V1_X", "V2_X"]
          },
          "securityDomain": {
            "title": "Security domain",
            "description": "The security domain (realm) from where the token has been generated and must be introspect.",
            "type": "string"
          },
          "clientId": {
            "title": "Client Id",
            "description": "The client identifier.",
            "type": "string"
          },
          "clientSecret": {
            "title": "Client Secret",
            "description": "The client secret.",
            "type": "string"
          },
          "userClaim": {
            "title": "User claim",
            "description": "User claim field used to store end user on log analytics",
            "type": "string",
            "default": "sub"
          }
        },
        "required": ["serverURL", "version", "securityDomain", "clientId", "clientSecret"]
      }
    },
    {
      "id": "oauth2",
      "name": "Generic OAuth2 AS",
      "description": "Generic OAuth2 Authorization Server resource",
      "version": "1.13.0",
      "schema": {
        "type": "object",
        "id": "urn:jsonschema:io:gravitee:policy:oauth2:configuration:OAuth2PolicyConfiguration",
        "properties": {
          "oauthResource": {
            "title": "OAuth2 resource",
            "description": "OAuth2 resource used to validate token.",
            "type": "string"
          },
          "extractPayload": {
            "title": "Extract OAuth2 payload",
            "description": "Push the token endpoint payload into the 'oauth.payload' context attribute.",
            "type": "boolean",
            "default": false
          },
          "checkRequiredScopes": {
            "title": "Check scopes",
            "description": "Check required scopes to access the resource",
            "type": "boolean",
            "default": false
          },
          "requiredScopes": {
            "type": "array",
            "title": "Required scopes",
            "description": "List of required scopes to access the resource.",
            "items": {
              "type": "string",
              "title": "Scope"
            }
          },
          "modeStrict": {
            "title": "Mode strict",
            "description": "Check scopes with exactly those configured",
            "type": "boolean",
            "default": true
          },
          "propagateAuthHeader": {
            "title": "Propagate Authorization header",
            "description": "Allows to propagate Authorization header to the target endpoints",
            "type": "boolean",
            "default": true
          }
        },
        "required": ["oauthResource"]
      }
    },
    {
      "id": "custom",
      "name": "Custom",
      "description": "Custom resource",
      "version": "1.0.0",
      "schema": {
        "type": "object",
        "id": "urn:jsonschema:custom:CustomConfiguration",
        "properties": {
          "url": {
            "title": "Custom URL",
            "description": "Custom URL",
            "type": "string",
            "default": ""
          },
          "authUrl": {
            "title": "Custom Authentication URL",
            "description": "Custom Authentication",
            "type": "string",
            "default": ""
          },
          "clientId": {
            "title": "Client ID",
            "description": "Client ID",
            "type": "string",
            "default": ""
          },
          "secrets": {
            "title": "Client Secrets",
            "type": "string",
            "x-schema-form": {
              "type": "codemirror",
              "codemirrorOptions": {
                "placeholder": "Place your client secrets",
                "lineWrapping": false,
                "lineNumbers": true,
                "allowDropFileTypes": false,
                "autoCloseTags": true,
                "mode": "javascript"
              }
            }
          }
        },
        "required": ["url", "authUrl", "secrets"]
      }
    }
  ]
}
