{
	"info": {
		"_postman_id": "f111e935-c2b6-4ffe-96d6-ac57b50fd553",
		"name": "APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Publishing",
			"item": [
				{
					"name": "Not published",
					"item": [
						{
							"name": "-- Prepare --",
							"item": [
								{
									"name": "Create API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and not published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
													"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"CREATED\");",
													"});",
													"",
													"pm.collectionVariables.set(\"created_api_id\", jsonData.id);",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
													"pm.collectionVariables.set(\"random_uid\", uid);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{AUTHORIZATION_API1}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"contextPath\": \"/api{{random_uid}}\",\n\t\"description\": \"The API {{random_uid}}\",\n\t\"endpoint\": \"http://api/{{random_uid}}\",\n\t\"name\": \"API {{random_uid}}\",\n\t\"version\": \"{{random_uid}}\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Anonymous",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "noauth"
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Admin",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "admin",
										"type": "string"
									},
									{
										"key": "username",
										"value": "admin",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Api1",
							"item": [
								{
									"name": "Get APIs unauthorized",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API unauthorized",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "ap1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Application1",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "application1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "application1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "User",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "password",
										"type": "string"
									},
									{
										"key": "username",
										"value": "user",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "-- Clean Up --",
							"item": [
								{
									"name": "Delete created API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Published",
					"item": [
						{
							"name": "--Prepare--",
							"item": [
								{
									"name": "Create API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and not published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
													"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"CREATED\");",
													"});",
													"",
													"pm.collectionVariables.set(\"created_api_id\", jsonData.id);",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
													"pm.collectionVariables.set(\"random_uid\", uid);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{AUTHORIZATION_API1}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"contextPath\": \"/api{{random_uid}}\",\n\t\"description\": \"The API {{random_uid}}\",\n\t\"endpoint\": \"http://api/{{random_uid}}\",\n\t\"name\": \"API {{random_uid}}\",\n\t\"version\": \"{{random_uid}}\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Publish API",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(pm.collectionVariables.get(\"created_api\"));",
													"jsonData.lifecycle_state = 'published';",
													"",
													"delete jsonData.id;",
													"delete jsonData.state;",
													"delete jsonData.created_at;",
													"delete jsonData.updated_at;",
													"delete jsonData.owner;",
													"delete jsonData.context_path;",
													"delete jsonData.workflow_state;",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
													"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"PUBLISHED\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{AUTHORIZATION_API1}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{created_api}}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Anonymous",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "noauth"
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Admin",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "admin",
										"type": "string"
									},
									{
										"key": "username",
										"value": "admin",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Api1",
							"item": [
								{
									"name": "Get APIs contains created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"APIs list must contain published API\", function () {",
													"    pm.expect(jsonData.data).to.be.not.empty;",
													"    var apiFromList = jsonData.data.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
													"    pm.expect(apiFromList).to.be.not.null;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must exist\", function () {",
													"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('created_api_id'));",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.running).to.be.false;",
													"});",
													"",
													"pm.test(\"API must not be public\", function () {",
													"    pm.expect(jsonData.public).to.be.false;",
													"});",
													"",
													"pm.test(\"API must be published\", function () {",
													"    pm.expect(jsonData.draft).to.be.false;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Application1",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "application1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "application1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "User",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "password",
										"type": "string"
									},
									{
										"key": "username",
										"value": "user",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "-- Clean Up --",
							"item": [
								{
									"name": "Delete created API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Visibility",
			"item": [
				{
					"name": "Private",
					"item": [
						{
							"name": "-- Prepare --",
							"item": [
								{
									"name": "Create API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and not published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
													"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"CREATED\");",
													"});",
													"",
													"pm.collectionVariables.set(\"created_api_id\", jsonData.id);",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
													"pm.collectionVariables.set(\"random_uid\", uid);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"contextPath\": \"/api{{random_uid}}\",\n\t\"description\": \"The API {{random_uid}}\",\n\t\"endpoint\": \"http://api/{{random_uid}}\",\n\t\"name\": \"API {{random_uid}}\",\n\t\"version\": \"{{random_uid}}\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Publish API",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(pm.collectionVariables.get(\"created_api\"));",
													"jsonData.lifecycle_state = 'published';",
													"",
													"delete jsonData.id;",
													"delete jsonData.state;",
													"delete jsonData.created_at;",
													"delete jsonData.updated_at;",
													"delete jsonData.owner;",
													"delete jsonData.context_path;",
													"delete jsonData.workflow_state;",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
													"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"PUBLISHED\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{created_api}}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User member",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    ",
													"    var user = pm.response.json().find(user => user.displayName === pm.request.url.query.get(\"q\"));",
													"    pm.collectionVariables.set(\"user_member\", JSON.stringify(user));",
													"    pm.collectionVariables.set(\"user_member_id\", user.id);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/search/users/?q=user",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"search",
												"users",
												""
											],
											"query": [
												{
													"key": "q",
													"value": "user"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add member User to API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var user = JSON.parse(pm.collectionVariables.get(\"user_member\"));",
													"",
													"pm.variables.set(\"user_id\", user.id);",
													"pm.variables.set(\"user_ref\", user.reference);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{AUTHORIZATION_API1}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{user_id}}\",\n    \"reference\": \"{{user_ref}}\",\n    \"role\": \"USER\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/members",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId",
												"members"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Anonymous",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "noauth"
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Admin",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "admin",
										"type": "string"
									},
									{
										"key": "username",
										"value": "admin",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Api1",
							"item": [
								{
									"name": "Get APIs contains created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"APIs list must contain published API\", function () {",
													"    pm.expect(jsonData.data).to.be.not.empty;",
													"    var apiFromList = jsonData.data.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
													"    pm.expect(apiFromList).to.be.not.null;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must exist\", function () {",
													"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('created_api_id'));",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.running).to.be.false;",
													"});",
													"",
													"pm.test(\"API must not be public\", function () {",
													"    pm.expect(jsonData.public).to.be.false;",
													"});",
													"",
													"pm.test(\"API must be published\", function () {",
													"    pm.expect(jsonData.draft).to.be.false;",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Application1",
							"item": [
								{
									"name": "Get APIs does not contain created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var apiIds = jsonData.data.map(api => api.id);",
													"",
													"pm.test(\"APIs list must not contains created API\", function () {",
													"    pm.expect(apiIds).to.not.include(pm.collectionVariables.get(\"created_api_id\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "application1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "application1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "User",
							"item": [
								{
									"name": "Get APIs contains created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"APIs list must contain published API\", function () {",
													"    pm.expect(jsonData.data).to.be.not.empty;",
													"    var apiFromList = jsonData.data.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
													"    pm.expect(apiFromList).to.be.not.null;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must exist\", function () {",
													"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('created_api_id'));",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.running).to.be.false;",
													"});",
													"",
													"pm.test(\"API must not be public\", function () {",
													"    pm.expect(jsonData.public).to.be.false;",
													"});",
													"",
													"pm.test(\"API must be published\", function () {",
													"    pm.expect(jsonData.draft).to.be.false;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "password",
										"type": "string"
									},
									{
										"key": "username",
										"value": "user",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "-- Clean Up --",
							"item": [
								{
									"name": "Remove member User from API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/members?user={{user_member_id}}",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId",
												"members"
											],
											"query": [
												{
													"key": "user",
													"value": "{{user_member_id}}"
												}
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete created API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Public",
					"item": [
						{
							"name": "--Prepare--",
							"item": [
								{
									"name": "Create API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and not published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
													"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"CREATED\");",
													"});",
													"",
													"pm.collectionVariables.set(\"created_api_id\", jsonData.id);",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
													"pm.collectionVariables.set(\"random_uid\", uid);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"contextPath\": \"/api{{random_uid}}\",\n\t\"description\": \"The API {{random_uid}}\",\n\t\"endpoint\": \"http://api/{{random_uid}}\",\n\t\"name\": \"API {{random_uid}}\",\n\t\"version\": \"{{random_uid}}\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Publish API",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(pm.collectionVariables.get(\"created_api\"));",
													"jsonData.lifecycle_state = 'published';",
													"",
													"delete jsonData.id;",
													"delete jsonData.state;",
													"delete jsonData.created_at;",
													"delete jsonData.updated_at;",
													"delete jsonData.owner;",
													"delete jsonData.context_path;",
													"delete jsonData.workflow_state;",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
													"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"PUBLISHED\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{created_api}}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User member",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"    ",
													"    var user = pm.response.json().find(user => user.displayName === pm.request.url.query.get(\"q\"));",
													"    pm.collectionVariables.set(\"user_member\", JSON.stringify(user));",
													"    pm.collectionVariables.set(\"user_member_id\", user.id);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/search/users/?q=user",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"search",
												"users",
												""
											],
											"query": [
												{
													"key": "q",
													"value": "user"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add member User to API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var user = JSON.parse(pm.collectionVariables.get(\"user_member\"));",
													"",
													"pm.variables.set(\"user_id\", user.id);",
													"pm.variables.set(\"user_ref\", user.reference);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{AUTHORIZATION_API1}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{user_id}}\",\n    \"reference\": \"{{user_ref}}\",\n    \"role\": \"USER\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/members",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId",
												"members"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Make API public",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(pm.collectionVariables.get(\"created_api\"));",
													"jsonData.lifecycle_state = 'published';",
													"jsonData.visibility = 'public';",
													"",
													"delete jsonData.id;",
													"delete jsonData.state;",
													"delete jsonData.created_at;",
													"delete jsonData.updated_at;",
													"delete jsonData.owner;",
													"delete jsonData.context_path;",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API is stopped, private and published\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
													"    pm.expect(jsonData.visibility).to.eql(\"PUBLIC\");",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"PUBLISHED\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "{{AUTHORIZATION_API1}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{created_api}}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Anonymous",
							"item": [
								{
									"name": "Get APIs contains created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"APIs list must contain published API\", function () {",
													"    pm.expect(jsonData.data).to.be.not.empty;",
													"    var apiFromList = jsonData.data.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
													"    pm.expect(apiFromList).to.be.not.null;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must exist\", function () {",
													"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('created_api_id'));",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.running).to.be.false;",
													"});",
													"",
													"pm.test(\"API must be public\", function () {",
													"    pm.expect(jsonData.public).to.be.true;",
													"});",
													"",
													"pm.test(\"API must be published\", function () {",
													"    pm.expect(jsonData.draft).to.be.false;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "noauth"
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Admin",
							"item": [
								{
									"name": "Get APIs contains created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"APIs list must contain published API\", function () {",
													"    pm.expect(jsonData.data).to.be.not.empty;",
													"    var apiFromList = jsonData.data.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
													"    pm.expect(apiFromList).to.be.not.null;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must exist\", function () {",
													"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('created_api_id'));",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.running).to.be.false;",
													"});",
													"",
													"pm.test(\"API must be public\", function () {",
													"    pm.expect(jsonData.public).to.be.true;",
													"});",
													"",
													"pm.test(\"API must be published\", function () {",
													"    pm.expect(jsonData.draft).to.be.false;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "admin",
										"type": "string"
									},
									{
										"key": "username",
										"value": "admin",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Api1",
							"item": [
								{
									"name": "Get APIs unauthorized",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API unauthorized",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "ap1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Application1",
							"item": [
								{
									"name": "Get APIs contains created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"APIs list must contain published API\", function () {",
													"    pm.expect(jsonData.data).to.be.not.empty;",
													"    var apiFromList = jsonData.data.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
													"    pm.expect(apiFromList).to.be.not.null;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must exist\", function () {",
													"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('created_api_id'));",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.running).to.be.false;",
													"});",
													"",
													"pm.test(\"API must be public\", function () {",
													"    pm.expect(jsonData.public).to.be.true;",
													"});",
													"",
													"pm.test(\"API must be published\", function () {",
													"    pm.expect(jsonData.draft).to.be.false;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "application1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "application1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "User",
							"item": [
								{
									"name": "Get APIs contains created api",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"APIs list must contain published API\", function () {",
													"    pm.expect(jsonData.data).to.be.not.empty;",
													"    var apiFromList = jsonData.data.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
													"    pm.expect(apiFromList).to.be.not.null;",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must exist\", function () {",
													"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('created_api_id'));",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.running).to.be.false;",
													"});",
													"",
													"pm.test(\"API must be public\", function () {",
													"    pm.expect(jsonData.public).to.be.true;",
													"});",
													"",
													"pm.test(\"API must be published\", function () {",
													"    pm.expect(jsonData.draft).to.be.false;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "X-Xsrf-Token",
												"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
											},
											{
												"key": "X-Requested-With",
												"value": "XMLHttpRequest"
											},
											{
												"key": "X-Recaptcha-Token",
												"value": ""
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
											}
										],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "password",
										"type": "string"
									},
									{
										"key": "username",
										"value": "user",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "-- Clean Up --",
							"item": [
								{
									"name": "Remove member User from API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/members?user={{user_member_id}}",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId",
												"members"
											],
											"query": [
												{
													"key": "user",
													"value": "{{user_member_id}}"
												}
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete created API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "api1",
										"type": "string"
									},
									{
										"key": "username",
										"value": "api1",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Quality",
			"item": [
				{
					"name": "-- Prepare --",
					"item": [
						{
							"name": "Enable API review and set weights",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apiReview\": {\n        \"enabled\": true\n    },\n    \"apiQualityMetrics\": {\n        \"enabled\": true,\n        \"functionalDocumentationWeight\": null,\n        \"technicalDocumentationWeight\": 0,\n        \"descriptionWeight\": 25,\n        \"descriptionMinLength\": 25,\n        \"logoWeight\": 0,\n        \"categoriesWeight\": 0,\n        \"labelsWeight\": 25,\n        \"healthcheckWeight\": 0\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/portal/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"portal",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a manual rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_rule\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_rule_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"This is a manual rule to check\",\n    \"name\": \"Postman quality rule\",\n    \"weight\": 50\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/quality-rules/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"quality-rules",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create REVIEWER group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_reviewer_group\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_reviewer_group_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Postman Reviewer\",\n    \"event_rules\": [\n        {\n            \"event\": \"API_CREATE\"\n        }\n    ],\n    \"lock_api_role\": false,\n    \"lock_application_role\": false,\n    \"disable_membership_notifications\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Associate REVIEWER group to existing APIS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups/:reviewerGroupId/memberships?type=api",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups",
										":reviewerGroupId",
										"memberships"
									],
									"query": [
										{
											"key": "type",
											"value": "api"
										}
									],
									"variable": [
										{
											"key": "reviewerGroupId",
											"value": "{{created_reviewer_group_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User member",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var user = pm.response.json().find(user => user.displayName === pm.request.url.query.get(\"q\"));",
											"    pm.collectionVariables.set(\"user_member\", JSON.stringify(user));",
											"    pm.collectionVariables.set(\"user_member_reference\", user.reference);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/search/users/?q=user",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"search",
										"users",
										""
									],
									"query": [
										{
											"key": "q",
											"value": "user"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add REVIEWER member to group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"reference\": \"{{user_member_reference}}\",\n        \"roles\": [\n            {\n                \"scope\": \"API\",\n                \"name\": \"REVIEWER\"\n            },\n            {\n                \"scope\": \"APPLICATION\",\n                \"name\": \"USER\"\n            }\n        ]\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups/:reviewerGroupId/members",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups",
										":reviewerGroupId",
										"members"
									],
									"variable": [
										{
											"key": "reviewerGroupId",
											"value": "{{created_reviewer_group_id}}"
										}
									]
								},
								"description": "Use a group a reviewer which is not directly linked to the API."
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "admin",
								"type": "string"
							},
							{
								"key": "username",
								"value": "admin",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "API publisher asks for review",
					"item": [
						{
							"name": "Import API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API must not be running\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
											"});",
											"",
											"pm.test(\"API must be private\", function () {",
											"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
											"});",
											"",
											"pm.test(\"API must be draft\", function () {",
											"    pm.expect(jsonData.workflow_state).to.eql(\"DRAFT\");",
											"});",
											"",
											"pm.test(\"API must be created\", function () {",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"CREATED\");",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_api_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"proxy\": {\n        \"endpoints\": [\n            {\n                \"name\": \"default\",\n                \"target\": \"https://api.gravitee.io/echo\",\n                \"inherit\": true\n            }\n        ],\n        \"context_path\": \"/postman-review\"\n    },\n    \"pages\": [],\n    \"plans\": [],\n    \"tags\": [],\n    \"name\": \"Test Postman\",\n    \"description\": \"This is an API\",\n    \"version\": \"1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/import",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a label to API",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var createdApi = JSON.parse(pm.collectionVariables.get('created_api'));",
											"",
											"delete createdApi.id;",
											"delete createdApi.id;",
											"delete createdApi.state;",
											"delete createdApi.created_at;",
											"delete createdApi.updated_at;",
											"delete createdApi.owner;",
											"delete createdApi.context_path;",
											"delete createdApi.workflow_state;",
											"createdApi.labels = [\"quality\"];",
											"",
											"pm.collectionVariables.set('modified_api', JSON.stringify(createdApi));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should contain label\", function () {",
											"    pm.expect(jsonData.labels).to.be.not.empty;",
											"    pm.expect(jsonData.labels).to.include(\"quality\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{{modified_api}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ask for review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/reviews?action=ASK",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"reviews"
									],
									"query": [
										{
											"key": "action",
											"value": "ASK"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cannot start the API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(pm.response.json().message).to.eql(\"API can not be started without being reviewed\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId?action=START",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"query": [
										{
											"key": "action",
											"value": "START"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Reviewer reviews",
					"item": [
						{
							"name": "Should have task to review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should have one task for reviewing\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"\tvar apiFromList = jsonData.data.find(api => api.data.referenceId === pm.collectionVariables.get('created_api_id'));",
											"    pm.expect(apiFromList.data.type).to.eql(\"REVIEW\");",
											"    pm.expect(apiFromList.data.state).to.eql(\"IN_REVIEW\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/user/tasks",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"user",
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get APIs contains created api with good status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"APIs list must not empty\", function () {",
											"    pm.expect(jsonData).to.be.not.empty;",
											"    var apiFromList = jsonData.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
											"\tpm.expect(apiFromList).to.be.not.null;",
											"    pm.expect(apiFromList.workflow_state).to.eql(\"IN_REVIEW\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "X-Xsrf-Token",
										"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "X-Recaptcha-Token",
										"value": ""
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
									}
								],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get API in review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API must not be running\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
											"});",
											"",
											"pm.test(\"API must be private\", function () {",
											"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
											"});",
											"",
											"pm.test(\"API must be draft\", function () {",
											"    pm.expect(jsonData.workflow_state).to.eql(\"IN_REVIEW\");",
											"});",
											"",
											"pm.test(\"API must be created\", function () {",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"CREATED\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quality rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"There should have quality rule\", function () {",
											"    pm.expect(jsonData).to.be.not.empty;",
											"\tvar ruleFromList = jsonData.find(rule => rule.id === pm.collectionVariables.get('created_rule_id'));",
											"    pm.expect(ruleFromList.weight).to.eql(50);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/quality-rules",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"quality-rules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quality score",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Score should be 25%\", function () {",
											"    pm.expect(jsonData.score).to.eql(0.25);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.description.weight\"]).to.eql(false);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.labels.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[pm.collectionVariables.get('created_rule_id')]).to.eql(false);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/quality",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"quality"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Accept custom rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Rule should be checked\", function () {",
											"    pm.expect(jsonData.quality_rule).to.eql(pm.collectionVariables.get('created_rule_id'));",
											"    pm.expect(jsonData.checked).to.be.true;",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"api\": \"{{created_api_id}}\",\n    \"quality_rule\": \"{{created_rule_id}}\",\n    \"checked\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/quality-rules/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"quality-rules",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quality score",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Score should be 25%\", function () {",
											"    pm.expect(jsonData.score).to.eql(0.75);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.description.weight\"]).to.eql(false);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.labels.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[pm.collectionVariables.get('created_rule_id')]).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/quality",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"quality"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Reject review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/reviews?action=REJECT",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"reviews"
									],
									"query": [
										{
											"key": "action",
											"value": "REJECT"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "password",
								"type": "string"
							},
							{
								"key": "username",
								"value": "user",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "API publisher fix API and asks for review",
					"item": [
						{
							"name": "Should have task to review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should have one task for reviewing\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"\tvar apiFromList = jsonData.data.find(api => api.data.referenceId === pm.collectionVariables.get('created_api_id'));",
											"    pm.expect(apiFromList.data.type).to.eql(\"REVIEW\");",
											"    pm.expect(apiFromList.data.state).to.eql(\"REQUEST_FOR_CHANGES\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/user/tasks",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"user",
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a valid description to API",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var createdApi = JSON.parse(pm.collectionVariables.get('modified_api'));",
											"",
											"delete createdApi.id;",
											"delete createdApi.id;",
											"delete createdApi.state;",
											"delete createdApi.created_at;",
											"delete createdApi.updated_at;",
											"delete createdApi.owner;",
											"delete createdApi.context_path;",
											"delete createdApi.workflow_state;",
											"createdApi.description = \"This is a more than 25 characters description\";",
											"",
											"pm.collectionVariables.set('modified_api', JSON.stringify(createdApi));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should contain label\", function () {",
											"    pm.expect(jsonData.labels).to.be.not.empty;",
											"    pm.expect(jsonData.labels).to.include(\"quality\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{{modified_api}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ask for review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/reviews?action=ASK",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"reviews"
									],
									"query": [
										{
											"key": "action",
											"value": "ASK"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quality score",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Score should be 25%\", function () {",
											"    pm.expect(jsonData.score).to.eql(1);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.description.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.labels.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[pm.collectionVariables.get('created_rule_id')]).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/quality",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"quality"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cannot start the API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(pm.response.json().message).to.eql(\"API can not be started without being reviewed\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId?action=START",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"query": [
										{
											"key": "action",
											"value": "START"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Reviewer reviews",
					"item": [
						{
							"name": "Should have task to review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should have one task for reviewing\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"\tvar apiFromList = jsonData.data.find(api => api.data.referenceId === pm.collectionVariables.get('created_api_id'));",
											"    pm.expect(apiFromList.data.type).to.eql(\"REVIEW\");",
											"    pm.expect(apiFromList.data.state).to.eql(\"IN_REVIEW\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/user/tasks",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"user",
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get APIs contains api in review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"APIs list must not empty\", function () {",
											"    pm.expect(jsonData).to.be.not.empty;",
											"    var apiFromList = jsonData.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
											"\tpm.expect(apiFromList).to.be.not.null;",
											"    pm.expect(apiFromList.workflow_state).to.eql(\"IN_REVIEW\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "X-Xsrf-Token",
										"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "X-Recaptcha-Token",
										"value": ""
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
									}
								],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get API in review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API must not be running\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
											"});",
											"",
											"pm.test(\"API must be private\", function () {",
											"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
											"});",
											"",
											"pm.test(\"API must be in review\", function () {",
											"    pm.expect(jsonData.workflow_state).to.eql(\"IN_REVIEW\");",
											"});",
											"",
											"pm.test(\"API must be created\", function () {",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"CREATED\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quality rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"There should have quality rule\", function () {",
											"    pm.expect(jsonData).to.be.not.empty;",
											"\tvar ruleFromList = jsonData.find(rule => rule.id === pm.collectionVariables.get('created_rule_id'));",
											"    pm.expect(ruleFromList.weight).to.eql(50);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/quality-rules",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"quality-rules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quality score",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Score should be 25%\", function () {",
											"    pm.expect(jsonData.score).to.eql(1);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.description.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.labels.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[pm.collectionVariables.get('created_rule_id')]).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/quality",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"quality"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Accept review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/reviews?action=ACCEPT",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"reviews"
									],
									"query": [
										{
											"key": "action",
											"value": "ACCEPT"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "password",
								"type": "string"
							},
							{
								"key": "username",
								"value": "user",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "API publisher can start the API",
					"item": [
						{
							"name": "Get APIs contains api with review ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"APIs list must not empty\", function () {",
											"    pm.expect(jsonData).to.be.not.empty;",
											"    var apiFromList = jsonData.find(api => api.id === pm.collectionVariables.get('created_api_id'));",
											"\tpm.expect(apiFromList).to.be.not.null;",
											"    pm.expect(apiFromList.workflow_state).to.eql(\"REVIEW_OK\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "X-Xsrf-Token",
										"value": "d863d677-df33-4810-a28f-2f1bfe0789b1"
									},
									{
										"key": "X-Requested-With",
										"value": "XMLHttpRequest"
									},
									{
										"key": "X-Recaptcha-Token",
										"value": ""
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
									}
								],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get API with review ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API must not be running\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
											"});",
											"",
											"pm.test(\"API must be private\", function () {",
											"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
											"});",
											"",
											"pm.test(\"API review must be ok\", function () {",
											"    pm.expect(jsonData.workflow_state).to.eql(\"REVIEW_OK\");",
											"});",
											"",
											"pm.test(\"API must be created\", function () {",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"CREATED\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Quality score",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Score should be 25%\", function () {",
											"    pm.expect(jsonData.score).to.eql(1);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.description.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[\"api.quality.metrics.labels.weight\"]).to.eql(true);",
											"    pm.expect(jsonData.metrics_passed[pm.collectionVariables.get('created_rule_id')]).to.eql(true);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/quality",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"quality"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Start the API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId?action=START",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"query": [
										{
											"key": "action",
											"value": "START"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "-- Clean up --",
					"item": [
						{
							"name": "Stop the API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId?action=STOP",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"query": [
										{
											"key": "action",
											"value": "STOP"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete created API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable API review and reset weights",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apiReview\": {\n        \"enabled\": false\n    },\n    \"apiQualityMetrics\": {\n        \"enabled\": false,\n        \"functionalDocumentationWeight\": null,\n        \"technicalDocumentationWeight\": 0,\n        \"descriptionWeight\": 0,\n        \"descriptionMinLength\": 100,\n        \"logoWeight\": 0,\n        \"categoriesWeight\": 0,\n        \"labelsWeight\": 0,\n        \"healthcheckWeight\": 0\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/portal/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"portal",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete manual rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/quality-rules/:ruleId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"quality-rules",
										":ruleId"
									],
									"query": [
										{
											"key": "ruleId",
											"value": null,
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "ruleId",
											"value": "{{created_rule_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete REVIEWER group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups/:reviewerGroupId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups",
										":reviewerGroupId"
									],
									"variable": [
										{
											"key": "reviewerGroupId",
											"value": "{{created_reviewer_group_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Rating",
			"item": [
				{
					"name": "-- Prepare --",
					"item": [
						{
							"name": "Disable API rating",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"portal\": {\n        \"rating\": {\n            \"enabled\": false,\n            \"comment\": {\n                \"mandatory\": false\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/portal/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"portal",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Import API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API must not be running\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
											"});",
											"",
											"pm.test(\"API must be private\", function () {",
											"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
											"});",
											"",
											"pm.test(\"API must be created\", function () {",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"CREATED\");",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_api_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"proxy\": {\n        \"endpoints\": [\n            {\n                \"name\": \"default\",\n                \"target\": \"https://api.gravitee.io/echo\",\n                \"inherit\": true\n            }\n        ],\n        \"context_path\": \"/postman-rating\"\n    },\n    \"pages\": [],\n    \"plans\": [],\n    \"tags\": [],\n    \"name\": \"Test Postman\",\n    \"description\": \"This is an API\",\n    \"version\": \"1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/import",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										"import"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "admin",
								"type": "string"
							},
							{
								"key": "username",
								"value": "admin",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Rate the api",
					"item": [
						{
							"name": "Rate API by api1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"api_rate\", Math.round(Math.random() * 4 + 1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 503\", function () {",
											"    pm.response.to.have.status(503);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"rate\": {{api_rate}}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/ratings",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"ratings"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Rate API by admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"api_rate\", Math.round(Math.random() * 4 + 1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 503\", function () {",
											"    pm.response.to.have.status(503);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"rate\": {{api_rate}}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/ratings",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"ratings"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Enable rating service",
					"item": [
						{
							"name": "Enable API rating",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"portal\": {\n        \"rating\": {\n            \"enabled\": true,\n            \"comment\": {\n                \"mandatory\": false\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/portal/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"portal",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Rate the api",
					"item": [
						{
							"name": "Rate API by api1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"api_rate\", Math.round(Math.random() * 4 + 1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Rate is good\", function() {",
											"    pm.expect(jsonData.rate).to.eql(pm.collectionVariables.get(\"api_rate\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"rate\": {{api_rate}}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/ratings",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"ratings"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Rate API by admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"api_rate\", Math.round(Math.random() * 4 + 1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Rate is good\", function() {",
											"    pm.expect(jsonData.rate).to.eql(pm.collectionVariables.get(\"api_rate\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"rate\": {{api_rate}}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/ratings",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"ratings"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cannot rate API by api1 twice",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"api_rate\", Math.round(Math.random() * 4 + 1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"rate\": {{api_rate}}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/ratings",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"ratings"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cannot rate API by admin twice",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"api_rate\", Math.round(Math.random() * 4 + 1));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"rate\": {{api_rate}}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/ratings",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"ratings"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "-- Clean up --",
					"item": [
						{
							"name": "Delete created API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable API rating",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"portal\": {\n        \"rating\": {\n            \"enabled\": false,\n            \"comment\": {\n                \"mandatory\": false\n            }\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/portal/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"portal",
										""
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Documentation",
			"item": [
				{
					"name": "-- Prepare --",
					"item": [
						{
							"name": "Create READER group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_reader_group\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_reader_group_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Postman Reader\",\n    \"event_rules\": [\n        {\n            \"event\": \"API_CREATE\"\n        }\n    ],\n    \"lock_api_role\": false,\n    \"lock_application_role\": false,\n    \"disable_membership_notifications\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User member",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var user = pm.response.json().find(user => user.displayName === pm.request.url.query.get(\"q\"));",
											"    pm.collectionVariables.set(\"user_member\", JSON.stringify(user));",
											"    pm.collectionVariables.set(\"user_member_reference\", user.reference);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/search/users/?q=user",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"search",
										"users",
										""
									],
									"query": [
										{
											"key": "q",
											"value": "user"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add READER member to group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"reference\": \"{{user_member_reference}}\",\n        \"roles\": [\n            {\n                \"scope\": \"API\",\n                \"name\": \"USER\"\n            },\n            {\n                \"scope\": \"APPLICATION\",\n                \"name\": \"USER\"\n            }\n        ]\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups/:reviewerGroupId/members",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups",
										":reviewerGroupId",
										"members"
									],
									"variable": [
										{
											"key": "reviewerGroupId",
											"value": "{{created_reader_group_id}}"
										}
									]
								},
								"description": "Use a group a reviewer which is not directly linked to the API."
							},
							"response": []
						},
						{
							"name": "Import API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API must not be running\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
											"});",
											"",
											"pm.test(\"API must be private\", function () {",
											"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
											"});",
											"",
											"pm.test(\"API must be created\", function () {",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"CREATED\");",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_api_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"proxy\": {\n        \"endpoints\": [\n            {\n                \"name\": \"default\",\n                \"target\": \"https://api.gravitee.io/echo\",\n                \"inherit\": true\n            }\n        ],\n        \"context_path\": \"/postman-documentation\"\n    },\n    \"pages\": [],\n    \"plans\": [],\n    \"tags\": [],\n    \"name\": \"Test Postman\",\n    \"description\": \"This is an API\",\n    \"version\": \"1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/import",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										"import"
									]
								}
							},
							"response": []
						},
						{
							"name": "Publish API",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(pm.collectionVariables.get(\"created_api\"));",
											"jsonData.lifecycle_state = 'published';",
											"",
											"delete jsonData.id;",
											"delete jsonData.state;",
											"delete jsonData.created_at;",
											"delete jsonData.updated_at;",
											"delete jsonData.owner;",
											"delete jsonData.context_path;",
											"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API is stopped, private and published\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
											"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"PUBLISHED\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{created_api}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Make API public",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(pm.collectionVariables.get(\"created_api\"));",
											"jsonData.lifecycle_state = 'published';",
											"jsonData.visibility = 'public';",
											"",
											"delete jsonData.id;",
											"delete jsonData.state;",
											"delete jsonData.created_at;",
											"delete jsonData.updated_at;",
											"delete jsonData.owner;",
											"delete jsonData.context_path;",
											"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API is stopped, private and published\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
											"    pm.expect(jsonData.visibility).to.eql(\"PUBLIC\");",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"PUBLISHED\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{created_api}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "admin",
								"type": "string"
							},
							{
								"key": "username",
								"value": "admin",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Create UNPUBLISHED homepage and page",
					"item": [
						{
							"name": "Create homepage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be unpublished\", function () {",
											"    pm.expect(jsonData.published).to.be.false;",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_homepage\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_homepage_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Homepage\",\n    \"type\": \"MARKDOWN\",\n    \"parentId\": \"\",\n    \"content\": \"This is my homepage\",\n    \"homepage\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be unpublished\", function () {",
											"    pm.expect(jsonData.published).to.be.false;",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_page\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_page_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"documentation.md\",\n    \"type\": \"MARKDOWN\",\n    \"parentId\": \"\",\n    \"content\": \"# Here is a documentation file\\n\\nFake documentation\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Check documentation on portal",
					"item": [
						{
							"name": "Get homepage empty result",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?homepage=true",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "homepage",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get pages empty result",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?size=-1&homepage=false",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										},
										{
											"key": "homepage",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Publish previous pages",
					"item": [
						{
							"name": "Publish homepage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be published\", function () {",
											"    pm.expect(jsonData.published).to.be.true;",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_homepage\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_homepage_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"published\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_homepage_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Publish page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be published\", function () {",
											"    pm.expect(jsonData.published).to.be.true;",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_page\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_page_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"published\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Check documentation on portal",
					"item": [
						{
							"name": "Get homepage contains created homepage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var page = jsonData.data.find(page => page.id === pm.collectionVariables.get('created_homepage_id'))",
											"",
											"pm.test(\"Page should be present\", function (){",
											"    pm.expect(page).to.be.not.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?homepage=true",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "homepage",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get pages contains created page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var page = jsonData.data.find(page => page.id === pm.collectionVariables.get('created_page_id'))",
											"",
											"pm.test(\"Page should be present\", function (){",
											"    pm.expect(page).to.be.not.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?size=-1&homepage=false",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										},
										{
											"key": "homepage",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Create FOLDER with one page and move one into it",
					"item": [
						{
							"name": "Create folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be unpublished\", function () {",
											"    pm.expect(jsonData.published).to.be.false;",
											"});",
											"",
											"pm.test(\"Should be a folder\", function () {",
											"    pm.expect(jsonData.type).to.eql(\"FOLDER\");",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_folder\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_folder_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Folder\",\n    \"type\": \"FOLDER\",\n    \"parentId\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Publish folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be published\", function () {",
											"    pm.expect(jsonData.published).to.be.true;",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_folder\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_folder_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"published\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_folder_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create PUBLISHED page inside folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should have parentId\", function () {",
											"    pm.expect(jsonData.parentId).to.eql(pm.collectionVariables.get(\"created_folder_id\"));",
											"});",
											"",
											"pm.test(\"Should be published\", function () {",
											"    pm.expect(jsonData.published).to.be.true;",
											"});",
											"",
											"pm.test(\"Should be a folder\", function () {",
											"    pm.expect(jsonData.type).to.eql(\"MARKDOWN\");",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_page_inside_folder\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_page_inside_folder_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"In folder page\",\n    \"type\": \"MARKDOWN\",\n    \"parentId\": \"{{created_folder_id}}\",\n    \"content\": \"this page is created directly inside folder\",\n    \"published\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create PUBLISHED page outside folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be published\", function () {",
											"    pm.expect(jsonData.published).to.be.true;",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_page_outside_folder\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_page_outside_folder_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Outside folder\",\n    \"type\": \"MARKDOWN\",\n    \"parentId\": \"\",\n    \"content\": \"This is a page created outside the folder\",\n    \"published\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Move outside page inside folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should have parentId\", function () {",
											"    pm.expect(jsonData.parentId).to.eql(pm.collectionVariables.get(\"created_folder_id\"));",
											"});",
											"",
											"pm.test(\"Should be published\", function () {",
											"    pm.expect(jsonData.published).to.be.true;",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_page_outside_folder\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_page_outside_folder_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parentId\": \"{{created_folder_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_outside_folder_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Check documentation on portal",
					"item": [
						{
							"name": "Get homepage contains created homepage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var page = jsonData.data.find(page => page.id === pm.collectionVariables.get('created_homepage_id'))",
											"",
											"pm.test(\"Page should be present\", function (){",
											"    pm.expect(page).to.be.not.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?homepage=true",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "homepage",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get pages contains created pages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var pageIds = jsonData.data.map(page => page.id);",
											"",
											"pm.test(\"Pages should be present\", function (){",
											"    pm.expect(pageIds).to.have.members([",
											"        pm.collectionVariables.get(\"created_page_id\"),",
											"        pm.collectionVariables.get(\"created_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_inside_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_outside_folder_id\"),",
											"    ]);",
											"});",
											"",
											"pm.test(\"Homepage should not be present\", function() {",
											"    pm.expect(pageIds).to.not.include(pm.collectionVariables.get(\"created_homepage_id\"))",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?size=-1&homepage=false",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										},
										{
											"key": "homepage",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get page ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var page = JSON.parse(pm.collectionVariables.get(\"created_page_outside_folder\"));",
											"",
											"pm.test(\"Should have same title\", function () {",
											"    pm.expect(jsonData.name).to.eql(page.name);",
											"});",
											"",
											"pm.test(\"Should have same content\", function () {",
											"    pm.expect(jsonData.content).to.eql(page.content);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages/:pageId?include=content",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "include",
											"value": "content"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_outside_folder_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Add metadata with templating",
					"item": [
						{
							"name": "Add API state metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should have key\", function () {",
											"    pm.expect(jsonData.key).to.eql(\"api-state\");",
											"});",
											"",
											"pm.collectionVariables.set(\"created_metadata\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_metadata_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"format\": \"string\",\n    \"name\": \"api-state\",\n    \"value\": \"${api.state}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/metadata",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"metadata"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create PUBLISHED page using templating",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not have parentPath\", function () {",
											"    pm.expect(jsonData.parentPath).to.eql(\"\");",
											"});",
											"",
											"pm.test(\"Should be published\", function () {",
											"    pm.expect(jsonData.published).to.be.true;",
											"});",
											"",
											"pm.test(\"Should contain template string\", function() {",
											"    pm.expect(jsonData.content).to.eql(\"${api.visibility}\\n\\n${api.metadata['api-state']}\");",
											"});",
											"",
											"",
											"pm.collectionVariables.set(\"created_page_metadata\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_page_metadata_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"metadata\",\n    \"type\": \"MARKDOWN\",\n    \"parentId\": \"\",\n    \"content\": \"${api.visibility}\\n\\n${api.metadata['api-state']}\",\n    \"published\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Check documentation on portal",
					"item": [
						{
							"name": "Get page ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var page = JSON.parse(pm.collectionVariables.get(\"created_page_metadata\"));",
											"",
											"pm.test(\"Should have same title\", function () {",
											"    pm.expect(jsonData.name).to.eql(page.name);",
											"});",
											"",
											"pm.test(\"Should have interpolated content\", function () {",
											"    pm.expect(jsonData.content).to.eql(\"PUBLIC\\n\\nSTOPPED\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages/:pageId?include=content",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "include",
											"value": "content"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_metadata_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Exclude group",
					"item": [
						{
							"name": "READER can get pages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var pageIds = jsonData.data.map(page => page.id);",
											"",
											"pm.test(\"Pages should be present\", function (){",
											"    pm.expect(pageIds).to.have.members([",
											"        pm.collectionVariables.get(\"created_page_id\"),",
											"        pm.collectionVariables.get(\"created_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_inside_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_outside_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_metadata_id\")",
											"    ]);",
											"});",
											"",
											"pm.test(\"Homepage should not be present\", function() {",
											"    pm.expect(pageIds).to.not.include(pm.collectionVariables.get(\"created_homepage_id\"))",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?size=-1&homepage=false",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										},
										{
											"key": "homepage",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "READER can get page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var page = JSON.parse(pm.collectionVariables.get(\"created_page\"));",
											"",
											"pm.test(\"Should have same title\", function () {",
											"    pm.expect(jsonData.name).to.eql(page.name);",
											"});",
											"",
											"pm.test(\"Should have same content\", function () {",
											"    pm.expect(jsonData.content).to.eql(page.content);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages/:pageId?include=content",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "include",
											"value": "content"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Exclude READER group",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var page = JSON.parse(pm.collectionVariables.get(\"created_page\"));",
											"",
											"delete page.id;",
											"delete page.type;",
											"delete page.lastModificationDate;",
											"delete page.contentType;",
											"delete page.parentPath;",
											"delete page.messages;",
											"delete page.api;",
											"",
											"page.excluded_groups = [pm.collectionVariables.get(\"created_reader_group_id\")];",
											"",
											"pm.collectionVariables.set(\"created_page\", JSON.stringify(page));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var page = pm.response.json();",
											"",
											"pm.test(\"Should have excluded group\", function() {",
											"    pm.expect(page.excluded_groups).to.have.members([pm.collectionVariables.get(\"created_reader_group_id\")]);",
											"    pm.expect(page.visibility).to.eql(\"PRIVATE\");",
											"    pm.expect(page.excludedAccessControls).to.be.true;",
											"    pm.expect(page.accessControls).not.to.be.null;",
											"    pm.expect(page.accessControls).not.to.be.empty;",
											"    const excludedGroups = page.accessControls.filter((control) => control.referenceType.toUpperCase() === 'GROUP').map((control) => control.referenceId);",
											"    pm.expect(excludedGroups).to.have.members([pm.collectionVariables.get(\"created_reader_group_id\")]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{{created_page}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "READER cannot get pages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var pageIds = jsonData.data.map(page => page.id);",
											"",
											"pm.test(\"Pages should be present\", function (){",
											"    pm.expect(pageIds).to.have.members([",
											"        pm.collectionVariables.get(\"created_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_inside_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_outside_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_metadata_id\")",
											"    ]);",
											"});",
											"",
											"pm.test(\"Homepage should not be present\", function() {",
											"    pm.expect(pageIds).to.not.include(pm.collectionVariables.get(\"created_homepage_id\"))",
											"});",
											"",
											"pm.test(\"Excluded page should not be present\", function() {",
											"    pm.expect(pageIds).to.not.include(pm.collectionVariables.get(\"created_page_id\"))",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?size=-1&homepage=false",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										},
										{
											"key": "homepage",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "READER cannot get page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages/:pageId?include=content",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "include",
											"value": "content"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Translate",
					"item": [
						{
							"name": "Translate page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var page = pm.response.json();",
											"",
											"pm.test(\"Type is translation\", function() {",
											"    pm.expect(page.type).to.eql(\"TRANSLATION\");",
											"});",
											"",
											"pm.test(\"Should be published\", function() {",
											"    pm.expect(page.published).to.be.true;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"TRANSLATION\",\n    \"parentId\": \"{{created_page_id}}\",\n    \"configuration\": {\n        \"inheritContent\": \"false\",\n        \"lang\": \"fr\"\n    },\n    \"name\": \"Fausse documentation\",\n    \"content\": \"Fausse documentation\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Check documentation on portal",
					"item": [
						{
							"name": "Get pages contains pages with translation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var pageIds = jsonData.data.map(page => page.id);",
											"",
											"pm.test(\"Pages should be present\", function (){",
											"    pm.expect(pageIds).to.have.members([",
											"        pm.collectionVariables.get(\"created_page_id\"),",
											"        pm.collectionVariables.get(\"created_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_inside_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_outside_folder_id\"),",
											"        pm.collectionVariables.get(\"created_page_metadata_id\")",
											"    ]);",
											"});",
											"",
											"pm.test(\"Homepage should not be present\", function() {",
											"    pm.expect(pageIds).to.not.include(pm.collectionVariables.get(\"created_homepage_id\"));",
											"});",
											"",
											"var translatedPage = jsonData.data.find(page => page.id === pm.collectionVariables.get(\"created_page_id\"));",
											"",
											"pm.test(\"Page should be translated\", function() {",
											"    pm.expect(translatedPage.name).to.eql(\"Fausse documentation\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept-Language",
										"value": "fr-FR,fr;q=0.9",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?size=-1&homepage=false",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										},
										{
											"key": "homepage",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get page translated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should have same title\", function () {",
											"    pm.expect(jsonData.name).to.eql(\"Fausse documentation\");",
											"});",
											"",
											"pm.test(\"Should have interpolated content\", function () {",
											"    pm.expect(jsonData.content).to.eql(\"Fausse documentation\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept-Language",
										"value": "fr-FR,fr;q=0.9",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages/:pageId?include=content",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"query": [
										{
											"key": "include",
											"value": "content"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Aside links",
					"item": [
						{
							"name": "Get pages contains aside folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData).to.be.not.empty;",
											"});",
											"",
											"var page = jsonData.find(page => page.name === \"Aside\" && page.type === \"SYSTEM_FOLDER\")",
											"",
											"pm.test(\"Page should be present\", function (){",
											"    pm.expect(page).to.be.not.undefined;",
											"});",
											"",
											"pm.collectionVariables.set(\"aside_id\", page.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/?type=SYSTEM_FOLDER",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"query": [
										{
											"key": "type",
											"value": "SYSTEM_FOLDER"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add aside link to existing page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var page = pm.response.json();",
											"",
											"pm.test(\"Type is translation\", function() {",
											"    pm.expect(page.type).to.eql(\"LINK\");",
											"});",
											"",
											"pm.test(\"Should be published\", function() {",
											"    pm.expect(page.published).to.be.true;",
											"});",
											"",
											"pm.test(\"Should have parent path Aside\", function() {",
											"    pm.expect(page.parentPath).to.eql(\"/Aside\");",
											"});",
											"",
											"pm.collectionVariables.set(\"created_link\", JSON.stringify(page));",
											"pm.collectionVariables.set(\"created_link_id\", page.id);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Linked page\",\n    \"type\": \"LINK\",\n    \"parentId\": \"{{aside_id}}\",\n    \"configuration\": {\n        \"resourceType\": \"page\",\n        \"inherit\": \"false\",\n        \"isFolder\": false\n    },\n    \"content\": \"{{created_page_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										""
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Check documentation on portal",
					"item": [
						{
							"name": "Get links from aside",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"var createdLink = JSON.parse(pm.collectionVariables.get(\"created_link\"));",
											"",
											"var link = jsonData.slots.aside[0].links.find(link => link.name === createdLink.name);",
											"",
											"pm.test(\"Should have page reference\", function () {",
											"    pm.expect(link.resourceRef).to.eql(pm.collectionVariables.get(\"created_page_id\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept-Language",
										"type": "text",
										"value": "fr-FR,fr;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/links",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"links"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "-- Clean up --",
					"item": [
						{
							"name": "Delete metadata page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_metadata_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete page outside folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_outside_folder_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete page inside folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_inside_folder_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_folder_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete link",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_link_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_page_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete homepage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/pages/:pageId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages",
										":pageId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "pageId",
											"value": "{{created_homepage_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete READER group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups/:reviewerGroupId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups",
										":reviewerGroupId"
									],
									"variable": [
										{
											"key": "reviewerGroupId",
											"value": "{{created_reader_group_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get pages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/pages?size=-1&homepage=false",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"pages"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										},
										{
											"key": "homepage",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete created API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Plans",
			"item": [
				{
					"name": "--Prepare--",
					"item": [
						{
							"name": "Create API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API is stopped, private and not published\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
											"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"CREATED\");",
											"});",
											"",
											"pm.collectionVariables.set(\"created_api_id\", jsonData.id);",
											"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
											"pm.collectionVariables.set(\"random_uid\", uid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"contextPath\": \"/api{{random_uid}}\",\n\t\"description\": \"The API {{random_uid}}\",\n\t\"endpoint\": \"http://api/{{random_uid}}\",\n\t\"name\": \"API {{random_uid}}\",\n\t\"version\": \"{{random_uid}}\"\n}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Publish API",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(pm.collectionVariables.get(\"created_api\"));",
											"jsonData.lifecycle_state = 'published';",
											"jsonData.visibility = 'public';",
											"",
											"delete jsonData.id;",
											"delete jsonData.state;",
											"delete jsonData.created_at;",
											"delete jsonData.updated_at;",
											"delete jsonData.owner;",
											"delete jsonData.context_path;",
											"delete jsonData.workflow_state;",
											"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API is stopped, private and published\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
											"    pm.expect(jsonData.visibility).to.eql(\"PUBLIC\");",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"PUBLISHED\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{created_api}}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create EXCLUDED group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_excluded_group\", JSON.stringify(jsonData));",
											"pm.collectionVariables.set(\"created_excluded_group_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Postman Excluded\",\n    \"event_rules\": [\n        {\n            \"event\": \"API_CREATE\"\n        }\n    ],\n    \"lock_api_role\": false,\n    \"lock_application_role\": false,\n    \"disable_membership_notifications\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User member",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    ",
											"    var user = pm.response.json().find(user => user.displayName === pm.request.url.query.get(\"q\"));",
											"    pm.collectionVariables.set(\"user_member\", JSON.stringify(user));",
											"    pm.collectionVariables.set(\"user_member_reference\", user.reference);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/search/users/?q=user",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"search",
										"users",
										""
									],
									"query": [
										{
											"key": "q",
											"value": "user"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add EXCLUDED member to group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"reference\": \"{{user_member_reference}}\",\n        \"roles\": [\n            {\n                \"scope\": \"API\",\n                \"name\": \"REVIEWER\"\n            },\n            {\n                \"scope\": \"APPLICATION\",\n                \"name\": \"USER\"\n            }\n        ]\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups/:excludedGroupId/members",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups",
										":excludedGroupId",
										"members"
									],
									"variable": [
										{
											"key": "excludedGroupId",
											"value": "{{created_excluded_group_id}}"
										}
									]
								},
								"description": "Use a group a reviewer which is not directly linked to the API."
							},
							"response": []
						},
						{
							"name": "Create Application for subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_application_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "application1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "application1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\":\"application\",\n\t\"description\":\"Application for 'Plans scenario'\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/applications",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"applications"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Check on portal",
					"item": [
						{
							"name": "Get plans empty result",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json().data;",
											"",
											"pm.test(\"Plans array should be empty\", function() {",
											"    pm.expect(jsonData).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Create Plan",
					"item": [
						{
							"name": "Create Plan for subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_plan_id\", jsonData.id);",
											"pm.collectionVariables.set(\"created_plan\", JSON.stringify(jsonData));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\":\"Plan to test\",\n\t\"description\": \"a plan for Plans Scenario\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Check on portal",
					"item": [
						{
							"name": "Get plans empty result",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json().data;",
											"",
											"pm.test(\"Plans array should be empty\", function() {",
											"    pm.expect(jsonData).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get plan not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans/:planId",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Publish plan",
					"item": [
						{
							"name": "Publish created Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Plan should be published\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"PUBLISHED\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/plans/:planId/_publish",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId",
										"_publish"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create and Accept subscription",
					"item": [
						{
							"name": "Create Subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_subscription_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "application1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "application1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"application\":\"{{created_application_id}}\",\n\t\"plan\":\"{{created_plan_id}}\",\n\t\"request\":\"for Plans scenario\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/subscriptions",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"subscriptions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Accept Subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"pm.collectionVariables.set(\"created_subscription_id\", jsonData.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customApiKey\": null,\n    \"accepted\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/subscriptions/:subscriptionId/_process",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"subscriptions",
										":subscriptionId",
										"_process"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "subscriptionId",
											"value": "{{created_subscription_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Check on portal",
					"item": [
						{
							"name": "Get plans contains created plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json().data;",
											"",
											"pm.test(\"Plans array should not be empty\", function() {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"pm.test(\"Plans array should contain created plan\", function() {",
											"    var plan = jsonData.find(plan => plan.id === pm.collectionVariables.get('created_plan_id'));",
											"    pm.expect(plan).to.not.be.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get plan not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans/:planId",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Exclude group",
					"item": [
						{
							"name": "EXCLUDED can get plans",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should not be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.not.empty;",
											"});",
											"",
											"var planIds = jsonData.data.map(plan => plan.id);",
											"",
											"pm.test(\"Plan should be present\", function (){",
											"    pm.expect(planIds).to.have.members([",
											"        pm.collectionVariables.get(\"created_plan_id\")",
											"    ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Exclude EXCLUDED group",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var plan = JSON.parse(pm.collectionVariables.get(\"created_plan\"));",
											"",
											"",
											"delete plan.security;",
											"delete plan.type;",
											"delete plan.status;",
											"delete plan.api;",
											"delete plan.created_at;",
											"delete plan.updated_at;",
											"delete plan.flows;",
											"",
											"plan.order = 1;",
											"plan.excluded_groups = [pm.collectionVariables.get(\"created_excluded_group_id\")];",
											"",
											"pm.collectionVariables.set(\"created_plan\", JSON.stringify(plan));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var plan = pm.response.json();",
											"",
											"pm.test(\"Should have excluded group\", function() {",
											"    pm.expect(plan.excluded_groups).to.have.members([pm.collectionVariables.get(\"created_excluded_group_id\")]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{{created_plan}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/plans/:planId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "EXCLUDED cannot get plans",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Should be empty\", function () {",
											"    pm.expect(jsonData.data).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "user",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Deprecate plan",
					"item": [
						{
							"name": "Deprecate plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var plan = pm.response.json();",
											"",
											"pm.test(\"Plan should be deprecated\", function() {",
											"    pm.expect(plan.status).to.eql(\"DEPRECATED\");",
											"});",
											"",
											"pm.collectionVariables.set(\"created_plan\", JSON.stringify(plan));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/plans/:planId/_deprecate",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId",
										"_deprecate"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Check on portal",
					"item": [
						{
							"name": "Get plans empty result",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json().data;",
											"",
											"pm.test(\"Plans array should be empty\", function() {",
											"    pm.expect(jsonData).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get plan not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans/:planId",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Close plan",
					"item": [
						{
							"name": "Get associated subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json().data;",
											"",
											"pm.test(\"Should not be empty\", function() {",
											"    pm.expect(jsonData).to.not.be.empty;",
											"});",
											"",
											"var subscription = jsonData.find(sub => sub.id === pm.collectionVariables.get(\"created_subscription_id\"));",
											"",
											"pm.test(\"Should have right subscription\", function() {",
											"    pm.expect(subscription).to.be.not.null;",
											"    pm.expect(subscription.api).to.eql(pm.collectionVariables.get(\"created_api_id\"));",
											"    pm.expect(subscription.application).to.eql(pm.collectionVariables.get(\"created_application_id\"));",
											"    pm.expect(subscription.plan).to.eql(pm.collectionVariables.get(\"created_plan_id\"));",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/subscriptions?plan={{created_plan_id}}&status=accepted,pending,rejected,closed",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"subscriptions"
									],
									"query": [
										{
											"key": "plan",
											"value": "{{created_plan_id}}"
										},
										{
											"key": "status",
											"value": "accepted,pending,rejected,closed"
										}
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Close plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var plan = pm.response.json();",
											"",
											"pm.test(\"Plan should be deprecated\", function() {",
											"    pm.expect(plan.status).to.eql(\"CLOSED\");",
											"});",
											"",
											"pm.collectionVariables.set(\"created_plan\", JSON.stringify(plan));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId/plans/:planId/_close",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId",
										"_close"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Check on portal",
					"item": [
						{
							"name": "Get plans empty result",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json().data;",
											"",
											"pm.test(\"Plans array should be empty\", function() {",
											"    pm.expect(jsonData).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get plan not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_PORTAL_URL}}/apis/:apiId/plans/:planId",
									"host": [
										"{{GRAVITEEIO_PORTAL_URL}}"
									],
									"path": [
										"apis",
										":apiId",
										"plans",
										":planId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										},
										{
											"key": "planId",
											"value": "{{created_plan_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "application1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "application1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "-- Clean Up --",
					"item": [
						{
							"name": "Delete application",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "application1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "application1",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/applications/:applicationId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"applications",
										":applicationId"
									],
									"variable": [
										{
											"key": "applicationId",
											"value": "{{created_application_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete created API",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete EXCLUDED group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/configuration/groups/:excludedGroupId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"configuration",
										"groups",
										":excludedGroupId"
									],
									"variable": [
										{
											"key": "excludedGroupId",
											"value": "{{created_excluded_group_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "api1",
								"type": "string"
							},
							{
								"key": "username",
								"value": "api1",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Importing",
			"item": [
				{
					"name": "From OpenAPI definition",
					"item": [
						{
							"name": "-- Prepare --",
							"item": [
								{
									"name": "Get APIs and check if already imported for OpenAPI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var api = jsonData.find(api => api.name === \"Gravitee.io Portal Rest API\" && api.context_path === \"/portal/environments/DEFAULT\");",
													"",
													"if(api) {",
													"    pm.test(\"API has already been imported, following tests will be skipped\");",
													"    pm.collectionVariables.set(\"api_already_imported\", true);",
													"} else {",
													"    pm.collectionVariables.set(\"api_already_imported\", false);",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check OpenAPI definition availability",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_PORTAL_URL_OPENAPI}}",
											"host": [
												"{{GRAVITEEIO_PORTAL_URL_OPENAPI}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Import API",
							"item": [
								{
									"name": "Import API from OAI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if(!pm.collectionVariables.get(\"api_already_imported\")) {",
													"    pm.test(\"Status code is 201\", function() {",
													"        pm.response.to.have.status(201);",
													"    });",
													"",
													"    var jsonData = pm.response.json();",
													"    pm.collectionVariables.set(\"created_api_id\", jsonData.id);",
													"    pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));",
													"",
													"    pm.test(\"Should have id\", function() {",
													"        pm.expect(jsonData.id).to.be.not.null;",
													"        pm.expect(jsonData.id).to.be.not.undefined;",
													"    });",
													"",
													"    pm.test(\"Should be stopped and private\", function() {",
													"        pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
													"        pm.expect(jsonData.state).to.eql(\"STOPPED\");",
													"    });",
													"} else {",
													"    pm.test(\"API already imported, assertions skipped\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"with_documentation\": true,\n    \"with_path_mapping\": true,\n    \"with_policy_paths\": true,\n    \"with_policies\": [],\n    \"type\": \"URL\",\n    \"payload\": \"{{GRAVITEEIO_PORTAL_URL_OPENAPI}}\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/import/swagger",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												"import",
												"swagger"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if(!pm.collectionVariables.get(\"api_already_imported\")) {",
													"    pm.test(\"Status code is 200\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.test(\"Should have id\", function() {",
													"        pm.expect(jsonData.id).to.be.not.null;",
													"        pm.expect(jsonData.id).to.be.not.undefined;",
													"    });",
													"",
													"    pm.test(\"API must not be running\", function () {",
													"        pm.expect(jsonData.state).to.eql(\"STOPPED\");",
													"    });",
													"",
													"    pm.test(\"API must be private\", function () {",
													"        pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
													"    });",
													"} else {",
													"    pm.test(\"API already imported, assertions skipped\");",
													"}",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "-- Clean up --",
							"item": [
								{
									"name": "Delete created API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if(!pm.collectionVariables.get(\"api_already_imported\")) {",
													"    pm.test(\"Status code is 204\", function () {",
													"        pm.response.to.have.status(204);",
													"    });",
													"} else {",
													"    pm.test(\"API already imported, assertions skipped\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "From Swagger definition",
					"item": [
						{
							"name": "-- Prepare --",
							"item": [
								{
									"name": "Get APIs and check if already imported for Swagger",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var api = jsonData.find(api => api.name === \"Swagger Petstore\" && api.context_path === \"/v2\");",
													"",
													"if(api) {",
													"    pm.test(\"API has already been imported, following tests will be skipped\");",
													"    pm.collectionVariables.set(\"api_already_imported\", true);",
													"} else {",
													"    pm.collectionVariables.set(\"api_already_imported\", false);",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis"
											]
										}
									},
									"response": []
								},
								{
									"name": "Check Swagger definition availability",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://petstore.swagger.io/v2/swagger.json",
											"protocol": "https",
											"host": [
												"petstore",
												"swagger",
												"io"
											],
											"path": [
												"v2",
												"swagger.json"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Import API",
							"item": [
								{
									"name": "Import API from Swagger",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if(!pm.collectionVariables.get(\"api_already_imported\")) {",
													"    pm.test(\"Status code is 201\", function() {",
													"        pm.response.to.have.status(201);",
													"    });",
													"",
													"    var jsonData = pm.response.json();",
													"    pm.collectionVariables.set(\"created_api_id\", jsonData.id);",
													"    pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));",
													"",
													"    pm.test(\"Should have id\", function() {",
													"        pm.expect(jsonData.id).to.be.not.null;",
													"        pm.expect(jsonData.id).to.be.not.undefined;",
													"    });",
													"",
													"    pm.test(\"Should be stopped and private\", function() {",
													"        pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
													"        pm.expect(jsonData.state).to.eql(\"STOPPED\");",
													"    });",
													"} else {",
													"    pm.test(\"API already imported, assertions skipped\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"with_documentation\": true,\n    \"with_path_mapping\": true,\n    \"with_policy_paths\": true,\n    \"with_policies\": [],\n    \"type\": \"URL\",\n    \"payload\": \"https://petstore.swagger.io/v2/swagger.json\"\n}"
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/import/swagger",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												"import",
												"swagger"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if(!pm.collectionVariables.get(\"api_already_imported\")) {",
													"    pm.test(\"Status code is 200\", function () {",
													"        pm.response.to.have.status(200);",
													"    });",
													"",
													"    var jsonData = pm.response.json();",
													"",
													"    pm.test(\"Should have id\", function() {",
													"        pm.expect(jsonData.id).to.be.not.null;",
													"        pm.expect(jsonData.id).to.be.not.undefined;",
													"    });",
													"",
													"    pm.test(\"API must not be running\", function () {",
													"        pm.expect(jsonData.state).to.eql(\"STOPPED\");",
													"    });",
													"",
													"    pm.test(\"API must be private\", function () {",
													"        pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
													"    });",
													"} else {",
													"    pm.test(\"API already imported, assertions skipped\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "-- Clean up --",
							"item": [
								{
									"name": "Delete created API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if(!pm.collectionVariables.get(\"api_already_imported\")) {",
													"    pm.test(\"Status code is 204\", function () {",
													"        pm.response.to.have.status(204);",
													"    });",
													"} else {",
													"    pm.test(\"API already imported, assertions skipped\");",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "From Gravitee definition",
					"item": [
						{
							"name": "Import API",
							"item": [
								{
									"name": "Import API from Gravitee definition",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
													"});",
													"",
													"pm.test(\"API must be private\", function () {",
													"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
													"});",
													"",
													"pm.test(\"API must be created\", function () {",
													"    pm.expect(jsonData.lifecycle_state).to.eql(\"CREATED\");",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"pm.collectionVariables.set(\"created_api\", JSON.stringify(jsonData));",
													"pm.collectionVariables.set(\"created_api_id\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"proxy\": {\n        \"endpoints\": [\n            {\n                \"name\": \"default\",\n                \"target\": \"https://api.gravitee.io/echo\",\n                \"inherit\": true\n            }\n        ],\n        \"context_path\": \"/postman-importing\"\n    },\n    \"pages\": [],\n    \"plans\": [],\n    \"tags\": [],\n    \"name\": \"Test Postman\",\n    \"description\": \"This is an API\",\n    \"version\": \"1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/import",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												"import"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get API ok",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Should have id\", function() {",
													"    pm.expect(jsonData.id).to.be.not.null;",
													"    pm.expect(jsonData.id).to.be.not.undefined;",
													"});",
													"",
													"pm.test(\"API must not be running\", function () {",
													"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
													"});",
													"",
													"pm.test(\"API must be private\", function () {",
													"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "api1",
													"type": "string"
												},
												{
													"key": "username",
													"value": "api1",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "-- Clean up --",
							"item": [
								{
									"name": "Delete created API",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "admin",
													"type": "string"
												},
												{
													"key": "username",
													"value": "admin",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
											"host": [
												"{{GRAVITEEIO_MGMT_URL}}"
											],
											"path": [
												"apis",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId",
													"value": "{{created_api_id}}"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "--Prepare--",
					"item": [
						{
							"name": "Create API for API1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API is stopped, private and not published\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
											"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"CREATED\");",
											"});",
											"",
											"pm.collectionVariables.set(\"created_api_api1_id\", jsonData.id);",
											"pm.collectionVariables.set(\"created_api_api1\", JSON.stringify(jsonData));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
											"pm.collectionVariables.set(\"random_uid\", uid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{AUTHORIZATION_API1}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"contextPath\": \"/api{{random_uid}}\",\n\t\"description\": \"The API {{random_uid}}\",\n\t\"endpoint\": \"http://api/{{random_uid}}\",\n\t\"name\": \"API search_API1 {{random_uid}}\",\n\t\"version\": \"{{random_uid}}\"\n}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create API for admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"API is stopped, private and not published\", function () {",
											"    pm.expect(jsonData.state).to.eql(\"STOPPED\");",
											"    pm.expect(jsonData.visibility).to.eql(\"PRIVATE\");",
											"    pm.expect(jsonData.lifecycle_state).to.eql(\"CREATED\");",
											"});",
											"",
											"pm.collectionVariables.set(\"created_api_admin_id\", jsonData.id);",
											"pm.collectionVariables.set(\"created_api_admin\", JSON.stringify(jsonData));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
											"pm.collectionVariables.set(\"random_uid\", uid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"contextPath\": \"/api{{random_uid}}\",\n\t\"description\": \"The API {{random_uid}}\",\n\t\"endpoint\": \"http://api/{{random_uid}}\",\n\t\"name\": \"API search_ADMIN {{random_uid}}\",\n\t\"version\": \"{{random_uid}}\"\n}"
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "search apis",
					"item": [
						{
							"name": "Found search_API1 as admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"search_API1 is found\", function () {",
											"    pm.expect(jsonData).to.be.an('array');",
											"    pm.expect(jsonData.length).to.equal(1);",
											"    pm.expect(jsonData[0].name).to.contains(\"search_API1\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
											"pm.collectionVariables.set(\"random_uid\", uid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/_search?q=search_API1",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										"_search"
									],
									"query": [
										{
											"key": "q",
											"value": "search_API1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Found search_ADMIN as admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"search_ADMIN is found\", function () {",
											"    pm.expect(jsonData).to.be.an('array');",
											"    pm.expect(jsonData.length).to.equal(1);",
											"    pm.expect(jsonData[0].name).to.contains(\"search_ADMIN\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
											"pm.collectionVariables.set(\"random_uid\", uid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/_search?q=search_ADMIN",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										"_search"
									],
									"query": [
										{
											"key": "q",
											"value": "search_ADMIN"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Not found ADMIN as api1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"search_ADMIN not found\", function () {",
											"    pm.expect(jsonData).to.be.an('array');",
											"    pm.expect(jsonData.length).to.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
											"pm.collectionVariables.set(\"random_uid\", uid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/_search?q=search_ADMIN",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										"_search"
									],
									"query": [
										{
											"key": "q",
											"value": "search_ADMIN"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Found search_API1 as api1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"search_API1 is found\", function () {",
											"    pm.expect(jsonData.length).to.equals == 3;",
											"    pm.expect(jsonData[0].name).to.contains(\"search_API1\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var uid = (\"0000\" + (Math.random()*Math.pow(36,8) << 0).toString(36)).slice(-8);",
											"pm.collectionVariables.set(\"random_uid\", uid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "api1",
											"type": "string"
										},
										{
											"key": "username",
											"value": "api1",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/_search?q=search_API1",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										"_search"
									],
									"query": [
										{
											"key": "q",
											"value": "search_API1"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "-- Clean Up --",
					"item": [
						{
							"name": "Delete created API for API1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_api1_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete created API for admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{GRAVITEEIO_MGMT_URL}}/apis/:apiId",
									"host": [
										"{{GRAVITEEIO_MGMT_URL}}"
									],
									"path": [
										"apis",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "{{created_api_admin_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "RANDOM_NUMBER",
			"value": ""
		},
		{
			"key": "API",
			"value": ""
		},
		{
			"key": "API_ID",
			"value": ""
		},
		{
			"key": "random_uid",
			"value": ""
		},
		{
			"key": "created_api_id",
			"value": ""
		},
		{
			"key": "user_member",
			"value": ""
		},
		{
			"key": "user_member_id",
			"value": ""
		},
		{
			"key": "user_member_reference",
			"value": ""
		},
		{
			"key": "created_rule",
			"value": ""
		},
		{
			"key": "created_rule_id",
			"value": ""
		},
		{
			"key": "created_reviewer_group",
			"value": ""
		},
		{
			"key": "created_reviewer_group_id",
			"value": ""
		},
		{
			"key": "modified_api",
			"value": ""
		},
		{
			"key": "created_reader_group",
			"value": ""
		},
		{
			"key": "created_reader_group_id",
			"value": ""
		},
		{
			"key": "created_page_outside_folder",
			"value": ""
		},
		{
			"key": "created_page_outside_folder_id",
			"value": ""
		},
		{
			"key": "created_homepage",
			"value": ""
		},
		{
			"key": "created_homepage_id",
			"value": ""
		},
		{
			"key": "created_page",
			"value": ""
		},
		{
			"key": "created_page_id",
			"value": ""
		},
		{
			"key": "created_folder",
			"value": ""
		},
		{
			"key": "created_folder_id",
			"value": ""
		},
		{
			"key": "created_page_inside_folder",
			"value": ""
		},
		{
			"key": "created_page_inside_folder_id",
			"value": ""
		},
		{
			"key": "created_metadata",
			"value": ""
		},
		{
			"key": "created_metadata_id",
			"value": ""
		},
		{
			"key": "created_page_metadata",
			"value": ""
		},
		{
			"key": "created_page_metadata_id",
			"value": ""
		},
		{
			"key": "created_resource",
			"value": ""
		},
		{
			"key": "created_resource_id",
			"value": ""
		},
		{
			"key": "aside_id",
			"value": ""
		},
		{
			"key": "created_link",
			"value": ""
		},
		{
			"key": "created_link_id",
			"value": ""
		},
		{
			"key": "api_rate",
			"value": ""
		},
		{
			"key": "created_api",
			"value": ""
		},
		{
			"key": "api_already_imported",
			"value": ""
		},
		{
			"key": "created_excluded_group",
			"value": ""
		},
		{
			"key": "created_excluded_group_id",
			"value": ""
		},
		{
			"key": "created_application_id",
			"value": ""
		},
		{
			"key": "created_plan_id",
			"value": ""
		},
		{
			"key": "created_plan",
			"value": ""
		},
		{
			"key": "created_subscription_id",
			"value": ""
		},
		{
			"key": "created_api_api1_id",
			"value": ""
		},
		{
			"key": "created_api_api1",
			"value": ""
		},
		{
			"key": "created_api_admin_id",
			"value": ""
		},
		{
			"key": "created_api_admin",
			"value": ""
		}
	]
}